class StextShuffle{constructor(scenario){this.scenario=JSON.parse(JSON.stringify(scenario)),this.fixed={}}run(){this.randomSort(),this.generateNewId(),this.generateNewFromTo(),this.searchFixedScene(),this.rewriteIdForFixedScene(),this.rewriteEdgeId(),this.deleteOldId()}randomSort(){this.scenario.scenes.sort((function(m,n){return Math.random()-.5}))}generateNewId(){this.scenario.scenes.forEach((function(s,index){s.old_id=s.id,s.id=String(index)}))}generateNewFromTo(){this.scenario.edges.forEach((function(e){e.old_from=e.from,e.old_to=e.to}))}searchFixedScene(){let that=this;this.fixed={},this.scenario.scenes.forEach((function(s){(s.fixed||"0"===s.old_id)&&(that.fixed[s.old_id]=s.id)}))}searchSceneById(id){return this.scenario.scenes.find((function(s){return s.id===id}))}searchSceneByOldId(old_id){return this.scenario.scenes.find((function(s){return s.old_id===old_id}))}rewriteIdForFixedScene(){let that=this,fixed_keys=Object.keys(this.fixed);this.scenario.scenes.forEach((function(s,index){fixed_keys.includes(s.old_id)&&(console.log(`${s.id} / ${s.old_id}: ${s.text}`),console.log(that.searchSceneById(s.old_id)),that.searchSceneById(s.old_id).id=s.id,s.id=s.old_id)}))}rewriteEdgeId(){let that=this;this.scenario.edges.forEach((function(e){e.from=that.searchSceneByOldId(e.old_from).id,e.to=that.searchSceneByOldId(e.old_to).id,delete e.old_from,delete e.old_to}))}deleteOldId(){this.scenario.scenes.forEach((function(s){s.label=`${s.id}\n${s.summary}`,delete s.old_id}))}}